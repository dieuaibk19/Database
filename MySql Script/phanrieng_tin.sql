#Bài 1. Thủ tục insert dữ liệu:
DELIMITER //
 Create PROCEDURE  PROC_INSERT_CART_ (
 IN  P_ID_CUS VARCHAR(100),
 IN P_NUM_KIND INT
 )
BEGIN
    IF EXISTS( SELECT ID_CUS   FROM CART_  WHERE ID_CUS = P_ID_CUS )
        	THEN SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'PROC_INSERT_CART_ ERROR: ID CUSTOMER DA TON TAI, VUI LONG NHAP LAI!';
        	ELSE insert into CART_(ID_CUS, NUM_KIND)
    VALUES (P_ID_CUS, P_NUM_KIND);
    END IF;
END //
DELIMITER ;
CALL PROC_INSERT_CART_("CUS000001",0);
CALL PROC_INSERT_CART_("CUS000020",0)
 
 
#CAU 2.A, Trigger 1
 
DELIMITER $$
 
CREATE TRIGGER TRIG_INSERT_ORDER_
BEFORE INSERT ON ORDER_  FOR EACH ROW
BEGIN
        	IF EXISTS ( SELECT *	FROM ORDER_   WHERE ID_ORDER = NEW.ID_ORDER )
       THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'PROC_INSERT_CUSTOMER_ ERROR: ID ORDER DA TON TAI, VUI LONG NHAP LAI!';
       END IF;
        	IF NEW.STATUS_ORDER = "Đã giao"
       THEN
        	UPDATE SHIPPING_PARTNER_ SET  NUM_SUCESSFUL_ORDER= NUM_SUCESSFUL_ORDER+1
        	WHERE NAME_SHIPPING_PARTNER=NEW.NAME_SHIPPING_PARTNER ;
     
 END IF;
END $$
 
DELIMITER ;
INSERT INTO ORDER_ (ID_CUS, ID_ORDER, STATUS_ORDER, ADDRESS_ORDER, PAYMENT_METHOD, SHIPPING_FEE, NAME_SHIPPING_PARTNER)
VALUES
('CUS000001', 'ORD000001', 'Đã giao', '23 Phùng Thiệu A, phường 10, TP. Vĩnh Long', 'ONL', '40', 'J&T Express');
INSERT INTO ORDER_ (ID_CUS, ID_ORDER, STATUS_ORDER, ADDRESS_ORDER, PAYMENT_METHOD, SHIPPING_FEE, NAME_SHIPPING_PARTNER)
VALUES
('CUS000018', 'ORD000021', 'Đã giao', '23 Phùng Thiệu A, phường 10, TP. Vĩnh Long', 'ONL', '40', 'J&T Express');
 
 
 
#CAU 2.B, Trigger 2
DELIMITER $$
CREATE TRIGGER TRIG_UPDATE_CART
AFTER INSERT ON _INCLUDE_  FOR EACH ROW
BEGIN
         	DECLARE rowcount INT;
   
    SELECT COUNT(ID_PRODUCT)
    INTO rowcount
    FROM _INCLUDE_
    WHERE ID_CUS_CART=NEW.ID_CUS_CART;
   
   IF rowcount > 0 THEN
        	UPDATE CART_ SET NUM_KIND = rowcount
        	WHERE ID_CUS=NEW.ID_CUS_CART;
      END IF;	
END $$
DELIMITER ;
 
INSERT INTO _INCLUDE_ VALUES ('CUS000007',  'PRO000013',	'SHP000007',	15,   	'2021-11-11');
 
 
 
#CAU 3A. THỦ TỤC CHỨA SQL
DELIMITER //
CREATE PROCEDURE PROC_PAYMENT_METHOD(
        	IN p_status_order VARCHAR(255)
)
BEGIN
SELECT
  c.ID_CUSTOMER,
  c.NAME_CUS,
  o.PAYMENT_METHOD,
  o.ADDRESS_ORDER
FROM
        	 customer_ c
INNER JOIN order_ o
   ON c.ID_CUSTOMER = o.ID_CUS
        	WHERE o.PAYMENT_METHOD =p_status_order;
END //
DELIMITER ;

#CALL PROC_PAYMENT_METHOD('ONL');
#CALL PROC_PAYMENT_METHOD('ONL');
 
 
 
 
#C U 3B. THỦ TỤC CHỨA SQL
 
DELIMITER //
 
CREATE PROCEDURE PROC_TOTAL_PRODUCT(
        	IN p_date_add date
)
BEGIN
        	SELECT
 ID_CUS_CART,
SUM(NUM_PRODUCT) AS total_product
FROM
    _include_
WHERE
   DATE_ADD = p_date_add
GROUP BY
   ID_CUS_CART
HAVING
   total_product>=10;
END //
 
DELIMITER ;
 
#CALL PROC_TOTAL_PRODUCT ("2021-11-11");
 
#CAU 4. HÀM 1

DELIMITER $$
CREATE FUNCTION FUC_TOTAL_PRODUCT(
NUM INT,
QTY INT
)
RETURNS INT
DETERMINISTIC
BEGIN
DECLARE SUM  INT;
DECLARE IDX INT;
        	SET SUM = 0;
        	SET IDX = 0;
loop_label:  LOOP
                    	IF  IDX >= NUM THEN
                                	LEAVE  loop_label;
                    	END  IF;
                    	SET IDX=IDX+1;
                    	SET  SUM = SUM + QTY;
                    	
        	END LOOP;
        	RETURN (SUM);
END$$
DELIMITER ;

#SELECT FUC_TOTAL_PRODUCT(COUNT(ID_PRODUCT),NUM_PRODUCT) AS TOTAL_PRODUCT FROM _INCLUDE_;
 
#CAU 4. HÀM 2
 
DELIMITER $$
 
CREATE FUNCTION FUC_CUSTOMER_AGE(
DATE_OF_BIRTH DATE
)
RETURNS VARCHAR(50)
DETERMINISTIC
BEGIN
DECLARE customerAge VARCHAR(50);
DECLARE AGE INT;
SET AGE = ROUND(DATEDIFF(CURDATE(), DATE_OF_BIRTH) / 365, 0) ;
 
    IF (AGE > 12 AND AGE < 20) THEN
                    	SET  customerAge = 'TUỔI VỊ THÀNH NIÊN';
    ELSEIF (AGE >=20 AND AGE<40) THEN
    	SET  customerAge = 'TUỔI THANH NIÊN';
    ELSEIF (AGE >=40 AND AGE<60) THEN
    	SET  customerAge = 'TUỔI TRUNG NIÊN';
        	ELSEIF AGE>=60 THEN
    	SET  customerAge = 'TUỔI GIÀ';
        	ELSE   SET  customerAge = 'TUỔI THIẾU NHI';
    END IF;
        	RETURN (customerAge);
END$$
DELIMITER ;
 
 
# SELECT ID_CUSTOMER,NAME_CUS,FUC_CUSTOMER_AGE(DATE_OF_BIRTH) FROM CUSTOMER_ ORDER BY ID_CUSTOMER;
